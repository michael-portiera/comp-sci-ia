package gui;

import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.util.LinkedList;
import java.util.List;
import javafx.scene.input.KeyCode;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import model.Project;
import model.math.Element;
import model.math.ElementBuilder;
import model.math.Term;
import model.table.Constant;
import model.table.DataSet;
import model.table.VariableSet;
import util.CSVExporter;
import util.HTMLExporter;
import util.Html;

/**
 *
 * @author Michael Portiera
 */
public class ProjectPage extends javax.swing.JFrame {

    /**
     * Creates new form ProjectPage
     */
    public Project project;
    public ProjectPage self;
    
    DefaultListModel<String> datasetnames;
    DefaultListModel<String> constantnames;
    DefaultListModel<String> variablenames;
    TableModel table;
    
    DataSet selectedDataSet;
    Constant selectedConstant;
    VariableSet selectedVariable;
    
    public ProjectPage(Project project) 
    {
        self = this;
        this.project = project;
        initComponents();
        
        datasetnames = new DefaultListModel<String>();
        lstDataSets.setModel(datasetnames);
        constantnames = new DefaultListModel<String>();
        lstConstants.setModel(constantnames);
        variablenames = new DefaultListModel<String>();
        lstVariables.setModel(variablenames);
        
        table = new TableModel(project);
        tblData.setModel(table);
        JFormattedTextField f = new JFormattedTextField();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        tabPanel = new javax.swing.JTabbedPane();
        panDetails = new javax.swing.JPanel();
        fldProjectName = new javax.swing.JTextField();
        lblPojectName = new javax.swing.JLabel();
        lblFileLocation = new javax.swing.JLabel();
        fldFileLocation = new javax.swing.JTextField();
        btnFileBrowser = new javax.swing.JButton();
        panDatasets = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstDataSets = new javax.swing.JList<>();
        lblDataSetName = new javax.swing.JLabel();
        lblUnits = new javax.swing.JLabel();
        fldDataSetName = new javax.swing.JTextField();
        fldUnits = new javax.swing.JTextField();
        radFixedUnc = new javax.swing.JRadioButton();
        radVarUnc = new javax.swing.JRadioButton();
        lblUncertainty = new javax.swing.JLabel();
        cbxPercentage = new javax.swing.JCheckBox();
        spnUncertainty = new javax.swing.JSpinner();
        btnDeleteDataSet = new javax.swing.JButton();
        btnAddDataSet = new javax.swing.JButton();
        btnSaveDataSets = new javax.swing.JButton();
        panConstants = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstConstants = new javax.swing.JList<>();
        lblConstantName = new javax.swing.JLabel();
        fldConstantName = new javax.swing.JTextField();
        lblConstantValue = new javax.swing.JLabel();
        spnConstantValue = new javax.swing.JSpinner();
        btnAddConstant = new javax.swing.JButton();
        btnDeleteConstant = new javax.swing.JButton();
        btnSaveConstant = new javax.swing.JButton();
        lblConstantUncertainty = new javax.swing.JLabel();
        spnConstantUncertainty = new javax.swing.JSpinner();
        cbxConstantPercentage = new javax.swing.JCheckBox();
        lblConstantUnits = new javax.swing.JLabel();
        fldConstantUnits = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstVariables = new javax.swing.JList<>();
        btnAddVariable = new javax.swing.JButton();
        btnDeleteVariable = new javax.swing.JButton();
        btnSaveVariable = new javax.swing.JButton();
        lblVariableName = new javax.swing.JLabel();
        fldVariableName = new javax.swing.JTextField();
        lblVariableUnits = new javax.swing.JLabel();
        fldVariableUnits = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtExpression = new javax.swing.JTextArea();
        lblExpression = new javax.swing.JLabel();
        btnRecordVariable = new javax.swing.JButton();
        lblExpressionDisplay = new javax.swing.JLabel();
        btnVerifyVariables = new javax.swing.JButton();
        lblVerifyVariablesMessage = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        lblFileLocation1 = new javax.swing.JLabel();
        fldFileLocation1 = new javax.swing.JTextField();
        btnFileBrowser1 = new javax.swing.JButton();
        btnExport = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        tabPanel.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tabPanel.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabPanelStateChanged(evt);
            }
        });

        panDetails.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        fldProjectName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fldProjectName.setText("Name of Project");
        fldProjectName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fldProjectNameKeyTyped(evt);
            }
        });

        lblPojectName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblPojectName.setText("Project Name:");

        lblFileLocation.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFileLocation.setText("File Location:");

        fldFileLocation.setEditable(false);
        fldFileLocation.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fldFileLocation.setForeground(new java.awt.Color(102, 102, 102));
        fldFileLocation.setText("Name of Project");

        btnFileBrowser.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnFileBrowser.setText("...");
        btnFileBrowser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileBrowserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panDetailsLayout = new javax.swing.GroupLayout(panDetails);
        panDetails.setLayout(panDetailsLayout);
        panDetailsLayout.setHorizontalGroup(
            panDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDetailsLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(panDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panDetailsLayout.createSequentialGroup()
                        .addComponent(lblFileLocation)
                        .addGap(18, 18, 18)
                        .addComponent(fldFileLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFileBrowser, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panDetailsLayout.createSequentialGroup()
                        .addComponent(lblPojectName)
                        .addGap(10, 10, 10)
                        .addComponent(fldProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(182, Short.MAX_VALUE))
        );
        panDetailsLayout.setVerticalGroup(
            panDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDetailsLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(panDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panDetailsLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(lblPojectName))
                    .addComponent(fldProjectName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(panDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panDetailsLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblFileLocation))
                    .addGroup(panDetailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fldFileLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFileBrowser)))
                .addContainerGap(418, Short.MAX_VALUE))
        );

        tabPanel.addTab("Project Details", panDetails);

        lstDataSets.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lstDataSets.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstDataSetsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstDataSets);

        lblDataSetName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblDataSetName.setText("Data Set Name:");

        lblUnits.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblUnits.setText("Data Set Units:");

        fldDataSetName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fldDataSetName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fldDataSetNameKeyTyped(evt);
            }
        });

        fldUnits.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fldUnits.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fldUnitsKeyTyped(evt);
            }
        });

        buttonGroup1.add(radFixedUnc);
        radFixedUnc.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        radFixedUnc.setText("Fixed Uncertainty");
        radFixedUnc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radFixedUncActionPerformed(evt);
            }
        });

        buttonGroup1.add(radVarUnc);
        radVarUnc.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        radVarUnc.setText("Variable Uncertainty");
        radVarUnc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radVarUncActionPerformed(evt);
            }
        });

        lblUncertainty.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblUncertainty.setText("Uncertainty:");

        cbxPercentage.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbxPercentage.setText("Percentage");
        cbxPercentage.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxPercentageItemStateChanged(evt);
            }
        });

        spnUncertainty.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        spnUncertainty.setModel(new javax.swing.SpinnerNumberModel(0.0d, null, null, 0.01d));
        spnUncertainty.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnUncertaintyStateChanged(evt);
            }
        });

        btnDeleteDataSet.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnDeleteDataSet.setText("Delete");
        btnDeleteDataSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDataSetActionPerformed(evt);
            }
        });

        btnAddDataSet.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnAddDataSet.setText("Add");
        btnAddDataSet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddDataSetActionPerformed(evt);
            }
        });

        btnSaveDataSets.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnSaveDataSets.setText("Save");
        btnSaveDataSets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveDataSetsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panDatasetsLayout = new javax.swing.GroupLayout(panDatasets);
        panDatasets.setLayout(panDatasetsLayout);
        panDatasetsLayout.setHorizontalGroup(
            panDatasetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDatasetsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panDatasetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panDatasetsLayout.createSequentialGroup()
                        .addComponent(btnAddDataSet)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeleteDataSet)))
                .addGap(18, 18, 18)
                .addGroup(panDatasetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panDatasetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(panDatasetsLayout.createSequentialGroup()
                            .addGroup(panDatasetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblDataSetName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblUnits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblUncertainty, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(18, 18, 18)
                            .addGroup(panDatasetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(fldDataSetName, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                .addComponent(fldUnits, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panDatasetsLayout.createSequentialGroup()
                                    .addComponent(spnUncertainty)
                                    .addGap(18, 18, 18)
                                    .addComponent(cbxPercentage))))
                        .addGroup(panDatasetsLayout.createSequentialGroup()
                            .addComponent(radFixedUnc)
                            .addGap(18, 18, 18)
                            .addComponent(radVarUnc)))
                    .addComponent(btnSaveDataSets))
                .addContainerGap(95, Short.MAX_VALUE))
        );
        panDatasetsLayout.setVerticalGroup(
            panDatasetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panDatasetsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panDatasetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panDatasetsLayout.createSequentialGroup()
                        .addGroup(panDatasetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDataSetName)
                            .addComponent(fldDataSetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panDatasetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fldUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblUnits))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(panDatasetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(radFixedUnc)
                            .addComponent(radVarUnc))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panDatasetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblUncertainty)
                            .addComponent(spnUncertainty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxPercentage))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveDataSets)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panDatasetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDeleteDataSet)
                    .addComponent(btnAddDataSet))
                .addContainerGap(141, Short.MAX_VALUE))
        );

        tabPanel.addTab("Data Sets", panDatasets);

        lstConstants.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lstConstants.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstConstantsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstConstants);

        lblConstantName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblConstantName.setText("Constant Name:");

        fldConstantName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fldConstantName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fldConstantNameKeyTyped(evt);
            }
        });

        lblConstantValue.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblConstantValue.setText("Constant Value:");

        spnConstantValue.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        spnConstantValue.setModel(new javax.swing.SpinnerNumberModel(0.0d, null, null, 0.01d));
        spnConstantValue.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnConstantValueStateChanged(evt);
            }
        });

        btnAddConstant.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnAddConstant.setText("Add");
        btnAddConstant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddConstantActionPerformed(evt);
            }
        });

        btnDeleteConstant.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnDeleteConstant.setText("Delete");
        btnDeleteConstant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteConstantActionPerformed(evt);
            }
        });

        btnSaveConstant.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnSaveConstant.setText("Save");
        btnSaveConstant.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveConstantActionPerformed(evt);
            }
        });

        lblConstantUncertainty.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblConstantUncertainty.setText("Uncertainty:");

        spnConstantUncertainty.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        spnConstantUncertainty.setModel(new javax.swing.SpinnerNumberModel(0.0d, null, null, 0.01d));
        spnConstantUncertainty.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                spnConstantUncertaintyStateChanged(evt);
            }
        });

        cbxConstantPercentage.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        cbxConstantPercentage.setText("Percentage");
        cbxConstantPercentage.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbxConstantPercentageItemStateChanged(evt);
            }
        });

        lblConstantUnits.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblConstantUnits.setText("Data Set Units:");

        fldConstantUnits.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fldConstantUnits.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fldConstantUnitsKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout panConstantsLayout = new javax.swing.GroupLayout(panConstants);
        panConstants.setLayout(panConstantsLayout);
        panConstantsLayout.setHorizontalGroup(
            panConstantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panConstantsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panConstantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panConstantsLayout.createSequentialGroup()
                        .addComponent(btnAddConstant)
                        .addGap(78, 78, 78)
                        .addComponent(btnDeleteConstant))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panConstantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(panConstantsLayout.createSequentialGroup()
                        .addGroup(panConstantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblConstantValue, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                            .addComponent(lblConstantName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblConstantUncertainty, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblConstantUnits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(panConstantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panConstantsLayout.createSequentialGroup()
                                .addComponent(spnConstantUncertainty, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(cbxConstantPercentage))
                            .addComponent(fldConstantName)
                            .addComponent(spnConstantValue)
                            .addComponent(fldConstantUnits)))
                    .addComponent(btnSaveConstant))
                .addGap(53, 53, 53))
        );
        panConstantsLayout.setVerticalGroup(
            panConstantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panConstantsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panConstantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panConstantsLayout.createSequentialGroup()
                        .addGroup(panConstantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblConstantName)
                            .addComponent(fldConstantName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panConstantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblConstantUnits)
                            .addComponent(fldConstantUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panConstantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spnConstantValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblConstantValue))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panConstantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblConstantUncertainty)
                            .addComponent(spnConstantUncertainty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxConstantPercentage))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveConstant)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panConstantsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDeleteConstant)
                    .addComponent(btnAddConstant))
                .addContainerGap(141, Short.MAX_VALUE))
        );

        tabPanel.addTab("Constants", panConstants);

        lstVariables.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lstVariables.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstVariablesValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstVariables);

        btnAddVariable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnAddVariable.setText("Add");
        btnAddVariable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddVariableActionPerformed(evt);
            }
        });

        btnDeleteVariable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnDeleteVariable.setText("Delete");
        btnDeleteVariable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteVariableActionPerformed(evt);
            }
        });

        btnSaveVariable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnSaveVariable.setText("Save");
        btnSaveVariable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveVariableActionPerformed(evt);
            }
        });

        lblVariableName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblVariableName.setText("Variable Name:");

        fldVariableName.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fldVariableName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fldVariableNameKeyTyped(evt);
            }
        });

        lblVariableUnits.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblVariableUnits.setText("Variable Units:");

        fldVariableUnits.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fldVariableUnits.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fldVariableUnitsKeyTyped(evt);
            }
        });

        txtExpression.setColumns(20);
        txtExpression.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtExpression.setRows(5);
        jScrollPane4.setViewportView(txtExpression);

        lblExpression.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblExpression.setText("Variable Expression:");

        btnRecordVariable.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnRecordVariable.setText("Record Expression");
        btnRecordVariable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRecordVariableActionPerformed(evt);
            }
        });

        lblExpressionDisplay.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblExpressionDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        btnVerifyVariables.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        btnVerifyVariables.setText("Verify");
        btnVerifyVariables.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerifyVariablesActionPerformed(evt);
            }
        });

        lblVerifyVariablesMessage.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        lblVerifyVariablesMessage.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(btnAddVariable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDeleteVariable)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblVariableUnits, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblVariableName, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE))
                        .addGap(18, 21, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fldVariableName, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fldVariableUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane4)
                    .addComponent(lblExpression, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblExpressionDisplay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRecordVariable)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveVariable))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(lblVerifyVariablesMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVerifyVariables)))
                .addGap(53, 53, 53))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblVariableName)
                            .addComponent(fldVariableName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblVariableUnits)
                            .addComponent(fldVariableUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblExpression)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSaveVariable)
                            .addComponent(btnRecordVariable)))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblExpressionDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnVerifyVariables)
                    .addComponent(btnDeleteVariable)
                    .addComponent(btnAddVariable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblVerifyVariablesMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(141, Short.MAX_VALUE))
        );

        tabPanel.addTab("Variables", jPanel2);

        tblData.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblData.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tblDataKeyPressed(evt);
            }
        });
        jScrollPane5.setViewportView(tblData);

        jButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 690, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE))
        );

        tabPanel.addTab("Table", jPanel3);

        lblFileLocation1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblFileLocation1.setText("Export Location:");

        fldFileLocation1.setEditable(false);
        fldFileLocation1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        fldFileLocation1.setForeground(new java.awt.Color(102, 102, 102));
        fldFileLocation1.setText("Export Location");
        fldFileLocation1.setToolTipText("");

        btnFileBrowser1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnFileBrowser1.setText("...");
        btnFileBrowser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFileBrowser1ActionPerformed(evt);
            }
        });

        btnExport.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnExport.setText("Export");
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnExport)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(lblFileLocation1)
                        .addGap(18, 18, 18)
                        .addComponent(fldFileLocation1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnFileBrowser1, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(lblFileLocation1))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fldFileLocation1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnFileBrowser1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnExport)
                .addContainerGap(414, Short.MAX_VALUE))
        );

        tabPanel.addTab("Export", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPanel)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPanel)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fldProjectNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fldProjectNameKeyTyped
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                project.SetName(fldProjectName.getText());
                RefreshDetails();
            }
        });
    }//GEN-LAST:event_fldProjectNameKeyTyped

    private void btnFileBrowserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileBrowserActionPerformed
        JFileChooser fc =new JFileChooser();
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            project.SetSRC(fc.getSelectedFile());
            RefreshDetails();
            Save();
        }
    }//GEN-LAST:event_btnFileBrowserActionPerformed

    private void tabPanelStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabPanelStateChanged
        int n = tabPanel.getSelectedIndex();
        switch (n)
        {
        case 0:
            RefreshDetails();
            break;
        case 1:
            RefreshDataSets();
            break;
        case 2:
            RefreshConstants();
            break;
        case 3:
            RefreshVariables();
            break;
        case 4:
            RefreshTable();
            break;
        case 5:
            RefreshExport();
            break;
        }
        Save();
    }//GEN-LAST:event_tabPanelStateChanged
    
    private void lstDataSetsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstDataSetsValueChanged
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                int i = lstDataSets.getSelectedIndex();
                if (i == -1) return;
                selectedDataSet = project.GetDataSet(i);
                RefreshDataSets();
            }
        });
    }//GEN-LAST:event_lstDataSetsValueChanged

    private void radFixedUncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radFixedUncActionPerformed
        if (selectedDataSet == null) return;
        selectedDataSet.SetFixedUnc(true);
        RefreshDataSets();
    }//GEN-LAST:event_radFixedUncActionPerformed

    private void radVarUncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radVarUncActionPerformed
        if (selectedDataSet == null) return;
        selectedDataSet.SetFixedUnc(false);
        RefreshDataSets();
    }//GEN-LAST:event_radVarUncActionPerformed

    private void spnUncertaintyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnUncertaintyStateChanged
        if (selectedDataSet == null) return;
        selectedDataSet.SetUnc((double) spnUncertainty.getValue());
        RefreshDataSets();
    }//GEN-LAST:event_spnUncertaintyStateChanged

    private void fldDataSetNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fldDataSetNameKeyTyped
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                if (selectedDataSet == null) return;
                selectedDataSet.SetName(fldDataSetName.getText());
                RefreshDataSets();
            }
        });
    }//GEN-LAST:event_fldDataSetNameKeyTyped

    private void fldUnitsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fldUnitsKeyTyped
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                if (selectedDataSet == null) return;
                selectedDataSet.SetUnits(fldUnits.getText());
                RefreshDataSets();
            }
        });
    }//GEN-LAST:event_fldUnitsKeyTyped

    private void cbxPercentageItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxPercentageItemStateChanged
        if (selectedDataSet == null) return;
        selectedDataSet.SetPercentageUnc(evt.getStateChange() == ItemEvent.SELECTED);
        RefreshDataSets();
    }//GEN-LAST:event_cbxPercentageItemStateChanged

    private void btnSaveDataSetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveDataSetsActionPerformed
        project.Save();
        RefreshDataSets();
    }//GEN-LAST:event_btnSaveDataSetsActionPerformed

    private void btnAddDataSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddDataSetActionPerformed
        project.AddDataSet(new DataSet("New Dataset", ""));
        RefreshDataSets();
    }//GEN-LAST:event_btnAddDataSetActionPerformed

    private void btnDeleteDataSetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDataSetActionPerformed
        int i = lstDataSets.getSelectedIndex();
        selectedDataSet = null;
        project.RemoveDataSet(i);
        lstDataSets.clearSelection();
        RefreshDataSets();
    }//GEN-LAST:event_btnDeleteDataSetActionPerformed

    private void fldConstantUnitsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fldConstantUnitsKeyTyped
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                if (selectedConstant == null) return;
                selectedConstant.SetUnits(fldConstantUnits.getText());
                RefreshConstants();
            }
        });
    }//GEN-LAST:event_fldConstantUnitsKeyTyped

    private void cbxConstantPercentageItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbxConstantPercentageItemStateChanged
        if (selectedConstant == null) return;
        selectedConstant.SetPercentageUnc(evt.getStateChange() == ItemEvent.SELECTED);
        RefreshConstants();
    }//GEN-LAST:event_cbxConstantPercentageItemStateChanged

    private void spnConstantUncertaintyStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnConstantUncertaintyStateChanged
        if (selectedConstant == null) return;
        selectedConstant.SetUnc((double) spnConstantUncertainty.getValue());
        RefreshConstants();
    }//GEN-LAST:event_spnConstantUncertaintyStateChanged

    private void btnSaveConstantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveConstantActionPerformed
        project.Save();
        RefreshConstants();
    }//GEN-LAST:event_btnSaveConstantActionPerformed

    private void btnDeleteConstantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteConstantActionPerformed
        int i = lstConstants.getSelectedIndex();
        selectedConstant = null;
        project.RemoveConstant(i);
        lstConstants.clearSelection();
        RefreshConstants();
    }//GEN-LAST:event_btnDeleteConstantActionPerformed

    private void btnAddConstantActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddConstantActionPerformed
        project.AddConstant(new Constant("New Constant", "", new Term(0d, 0d)));
        RefreshConstants();
    }//GEN-LAST:event_btnAddConstantActionPerformed

    private void spnConstantValueStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_spnConstantValueStateChanged
        if (selectedConstant == null) return;
        selectedConstant.SetVal((double) spnConstantValue.getValue());
        RefreshConstants();
    }//GEN-LAST:event_spnConstantValueStateChanged

    private void fldConstantNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fldConstantNameKeyTyped
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                if (selectedConstant == null) return;
                selectedConstant.SetName(fldConstantName.getText());
                RefreshConstants();
            }
        });
    }//GEN-LAST:event_fldConstantNameKeyTyped

    private void lstConstantsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstConstantsValueChanged
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                int i = lstConstants.getSelectedIndex();
                if (i == -1) return;
                selectedConstant = project.GetConstant(i);
                RefreshConstants();
            }
        });
    }//GEN-LAST:event_lstConstantsValueChanged

    private void lstVariablesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstVariablesValueChanged
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                int i = lstVariables.getSelectedIndex();
                if (i == -1) return;
                selectedVariable = project.GetVariable(i);
                RefreshVariables();
            }
        });
    }//GEN-LAST:event_lstVariablesValueChanged

    private void btnAddVariableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddVariableActionPerformed
        project.AddVariable(new VariableSet("New Variable", "", "a+b"));
        RefreshVariables();
    }//GEN-LAST:event_btnAddVariableActionPerformed

    private void btnDeleteVariableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteVariableActionPerformed
        int i = lstVariables.getSelectedIndex();
        selectedVariable = null;
        project.RemoveVariable(i);
        lstVariables.clearSelection();
        RefreshVariables();
    }//GEN-LAST:event_btnDeleteVariableActionPerformed

    private void btnSaveVariableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveVariableActionPerformed
        project.Save();
        RefreshVariables();
    }//GEN-LAST:event_btnSaveVariableActionPerformed

    private void fldVariableNameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fldVariableNameKeyTyped
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                if (selectedVariable == null) return;
                selectedVariable.SetName(fldVariableName.getText());
                RefreshVariables();
            }
        });
    }//GEN-LAST:event_fldVariableNameKeyTyped

    private void fldVariableUnitsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fldVariableUnitsKeyTyped
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                if (selectedVariable == null) return;
                selectedVariable.SetUnits(fldVariableUnits.getText());
                RefreshVariables();
            }
        });
    }//GEN-LAST:event_fldVariableUnitsKeyTyped

    private void btnRecordVariableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRecordVariableActionPerformed
        String s = txtExpression.getText();
        s = s.replace(" ", "");
        s = s.replace("\n", "");
        s = s.replace("\t", "");
        Element e = ElementBuilder.Build(s);
        if (e != null)
        {
            selectedVariable.SetElementByDefinition(s);
        }
        else
        {
            JOptionPane.showMessageDialog(this, 
                    "The expression you entered is invalid.", 
                    "Invalid Expression!", JOptionPane.ERROR_MESSAGE);
        }
        RefreshVariables();
    }//GEN-LAST:event_btnRecordVariableActionPerformed

    private void btnVerifyVariablesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerifyVariablesActionPerformed
        lblVerifyVariablesMessage.setText("Verifying...");
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                LinkedList<String> knowns = new LinkedList<String>();
                
                int c = project.GetDataSetCount();
                for (int i = 0 ; i < c; i++)
                    knowns.add(project.GetDataSet(i).GetName());
                c = project.GetConstantCount();
                for (int i = 0 ; i < c; i++)
                    knowns.add(project.GetConstant(i).GetName());
                
                LinkedList<VariableSet> variables 
                        = new LinkedList<VariableSet>(project.GetVariable());
                boolean success = true;
                while (success)
                {
                    success = false;
                    for (int i = 0; i < variables.size(); i++)
                    {
                        VariableSet v = variables.get(i);
                        if (v.CanCalculate(knowns)) 
                        {
                            success = true;
                            knowns.add(v.GetName());
                            variables.remove(v);
                            i--;
                        }
                    }
                }
                if (variables.size() > 0)
                {
                    lblVerifyVariablesMessage.setText("There are still uncalculable variable(s)!");
                    for (int i = 0; i < variables.size(); i++)
                    {
                        VariableSet v = variables.get(i);
                        List<String> undefined = v.GetUndefined(knowns);
                        String msg = "Variable '" + Html.Convert(v.GetName());
                        msg += "' cannot be calculated because<br>the ";
                        msg += "following term(s) are undefined:<br><br>";
                        msg += Html.Convert(undefined.get(0));
                        for (int j = 1; j < undefined.size(); j++)
                        {
                            msg += ", " + Html.Convert(undefined.get(j));
                        }
                        msg = "<html>" + msg + "</html>";
                        JOptionPane.showMessageDialog(self, msg,
                                "Uncalculable Variable",
                                JOptionPane.WARNING_MESSAGE);
                    }
                }
                else
                {
                    lblVerifyVariablesMessage.setText("All variables are calculable!");
                }
            }
        });
    }//GEN-LAST:event_btnVerifyVariablesActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        project.Save();
    }//GEN-LAST:event_jButton1ActionPerformed

    File export;
    
    private void btnFileBrowser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFileBrowser1ActionPerformed
        JFileChooser fc =new JFileChooser();
        if (fc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION)
        {
            export = fc.getSelectedFile();
            fldFileLocation1.setText(export.getAbsolutePath());
            Save();
            RefreshExport();
        }
    }//GEN-LAST:event_btnFileBrowser1ActionPerformed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        try 
        {
            HTMLExporter.Export(export, project);
        } 
        catch (Exception ex) 
        {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Could not export the file.", "Export Failed", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnExportActionPerformed

    private void tblDataKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblDataKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_DELETE)
        {
            int r = tblData.getSelectedRow();
            int c = tblData.getSelectedColumn();
            table.setValueAt(null, r, c);
            tblData.setRowSelectionInterval(r, r);
            tblData.setColumnSelectionInterval(c, c);
            evt.consume();
        }
    }//GEN-LAST:event_tblDataKeyPressed
    
    public static void Open(Project project) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProjectPage(project).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddConstant;
    private javax.swing.JButton btnAddDataSet;
    private javax.swing.JButton btnAddVariable;
    private javax.swing.JButton btnDeleteConstant;
    private javax.swing.JButton btnDeleteDataSet;
    private javax.swing.JButton btnDeleteVariable;
    private javax.swing.JButton btnExport;
    private javax.swing.JButton btnFileBrowser;
    private javax.swing.JButton btnFileBrowser1;
    private javax.swing.JButton btnRecordVariable;
    private javax.swing.JButton btnSaveConstant;
    private javax.swing.JButton btnSaveDataSets;
    private javax.swing.JButton btnSaveVariable;
    private javax.swing.JButton btnVerifyVariables;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox cbxConstantPercentage;
    private javax.swing.JCheckBox cbxPercentage;
    private javax.swing.JTextField fldConstantName;
    private javax.swing.JTextField fldConstantUnits;
    private javax.swing.JTextField fldDataSetName;
    private javax.swing.JTextField fldFileLocation;
    private javax.swing.JTextField fldFileLocation1;
    private javax.swing.JTextField fldProjectName;
    private javax.swing.JTextField fldUnits;
    private javax.swing.JTextField fldVariableName;
    private javax.swing.JTextField fldVariableUnits;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblConstantName;
    private javax.swing.JLabel lblConstantUncertainty;
    private javax.swing.JLabel lblConstantUnits;
    private javax.swing.JLabel lblConstantValue;
    private javax.swing.JLabel lblDataSetName;
    private javax.swing.JLabel lblExpression;
    private javax.swing.JLabel lblExpressionDisplay;
    private javax.swing.JLabel lblFileLocation;
    private javax.swing.JLabel lblFileLocation1;
    private javax.swing.JLabel lblPojectName;
    private javax.swing.JLabel lblUncertainty;
    private javax.swing.JLabel lblUnits;
    private javax.swing.JLabel lblVariableName;
    private javax.swing.JLabel lblVariableUnits;
    private javax.swing.JLabel lblVerifyVariablesMessage;
    private javax.swing.JList<String> lstConstants;
    private javax.swing.JList<String> lstDataSets;
    private javax.swing.JList<String> lstVariables;
    private javax.swing.JPanel panConstants;
    private javax.swing.JPanel panDatasets;
    private javax.swing.JPanel panDetails;
    private javax.swing.JRadioButton radFixedUnc;
    private javax.swing.JRadioButton radVarUnc;
    private javax.swing.JSpinner spnConstantUncertainty;
    private javax.swing.JSpinner spnConstantValue;
    private javax.swing.JSpinner spnUncertainty;
    private javax.swing.JTabbedPane tabPanel;
    private javax.swing.JTable tblData;
    private javax.swing.JTextArea txtExpression;
    // End of variables declaration//GEN-END:variables

    public void Save()
    {
        project.Save();
    }
    
    public void RefreshDetails()
    {
        fldProjectName.setText(project.GetName());
        fldFileLocation.setText(project.GetSRC().getAbsolutePath().toString());
    }
    
    public void RefreshDataSets()
    {
        int c = project.GetDataSetCount();
        for (int i = 0; i < c; i++)
        {
            DataSet k = project.GetDataSet(i);
            if (i >= datasetnames.size()) datasetnames.addElement("");
            datasetnames.setElementAt(k.GetHTML(), i);
        }
        while (c < datasetnames.getSize())
        {
            datasetnames.remove(c);
        }
        boolean b = selectedDataSet != null;
        boolean o;
        if (!b) o = false;
        else o = selectedDataSet.GetFixedUnc();
        fldDataSetName.setEnabled(b);
        fldUnits.setEnabled(b);
        spnUncertainty.setEnabled(b && o);
        radFixedUnc.setEnabled(b);
        radVarUnc.setEnabled(b);
        cbxPercentage.setEnabled(b && o);
        btnSaveConstant.setEnabled(b);
        if (b)
        {
            fldDataSetName.setText(selectedDataSet.GetName());
            fldUnits.setText(selectedDataSet.GetUnits());
            radFixedUnc.setSelected(o);
            radVarUnc.setSelected(!o);
            if (o)
            {
                spnUncertainty.getModel().setValue(selectedDataSet.GetUnc());
                cbxPercentage.setSelected(selectedDataSet.GetPercentageUnc());
            }
            else
            {
                spnUncertainty.getModel().setValue(0.0d);
                cbxPercentage.setSelected(false);
            }
        }
        else
        {
            fldDataSetName.setText("-");
            fldUnits.setText("-");
            spnUncertainty.getModel().setValue(0.0d);
            radFixedUnc.setSelected(false);
            radVarUnc.setSelected(false);
            cbxPercentage.setSelected(false);
        }
    }

    private void RefreshConstants() 
    {
        int c = project.GetConstantCount();
        for (int i = 0; i < c; i++)
        {
            Constant k = project.GetConstant(i);
            if (i >= constantnames.size()) constantnames.addElement("");
            constantnames.setElementAt(k.GetHTML(), i);
        }
        while (c < constantnames.getSize())
        {
            constantnames.remove(c);
        }
        boolean b = selectedConstant != null;
        fldConstantName.setEnabled(b);
        fldConstantUnits.setEnabled(b);
        spnConstantValue.setEnabled(b);
        spnConstantUncertainty.setEnabled(b);
        cbxConstantPercentage.setEnabled(b);
        btnSaveConstant.setEnabled(b);
        if (b)
        {
            fldConstantName.setText(selectedConstant.GetName());
            fldConstantUnits.setText(selectedConstant.GetUnits());
            spnConstantValue.setValue(selectedConstant.GetValue().GetV());
            spnConstantUncertainty.setValue(selectedConstant.GetValue().GetU());
            cbxConstantPercentage.setSelected(selectedConstant.GetPercentageUnc());
        }
        else
        {
            fldConstantName.setText("-");
            fldConstantUnits.setText("-");
            spnConstantValue.setValue(0d);
            spnConstantUncertainty.setValue(0d);
            cbxConstantPercentage.setSelected(false);
        }
    }
    
    private void RefreshVariables() 
    {
        int c = project.GetVariableCount();
        for (int i = 0; i < c; i++)
        {
            VariableSet k = project.GetVariable(i);
            if (i >= variablenames.size()) variablenames.addElement("");
            variablenames.setElementAt(k.GetHTML(), i);
        }
        while (c < variablenames.getSize())
        {
            variablenames.remove(c);
        }
        boolean b = selectedVariable != null;
        fldVariableName.setEnabled(b);
        fldVariableUnits.setEnabled(b);
        txtExpression.setEnabled(b);
        btnRecordVariable.setEnabled(b);
        btnSaveVariable.setEnabled(b);
        if (b)
        {
            fldVariableName.setText(selectedVariable.GetName());
            fldVariableUnits.setText(selectedVariable.GetUnits());
            txtExpression.setText(selectedVariable.GetDefinition());
            lblExpressionDisplay.setText("<html>" + selectedVariable.GetElement().GetString() + "</html>");
        }
        else
        {
            fldVariableName.setText("-");
            fldVariableUnits.setText("-");
            txtExpression.setText("");
            lblExpressionDisplay.setText("");
        }
    }
    
    public void RefreshExport()
    {
        btnExport.setEnabled(export != null);
    }

    private void RefreshTable() 
    {
        table = new TableModel(project);
        tblData.setModel(table);
    }
}